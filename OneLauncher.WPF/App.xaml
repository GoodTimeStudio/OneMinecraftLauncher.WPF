<Application x:Class="GoodTimeStudio.OneMinecraftLauncher.WPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:GoodTimeStudio.OneMinecraftLauncher.WPF"
             xmlns:Dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                    xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/FluentWPF;component/Styles/Controls.xaml" />

                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <!-- Accent and AppTheme setting -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Cobalt.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />

                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="AccentedFlatButton" 
                   BasedOn="{StaticResource MetroFlatButton}"
                   TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
            </Style>

            <Style x:Key="WindowButtonStyle.Light" 
               BasedOn="{StaticResource LightMetroWindowButtonStyle}"
               TargetType="{x:Type Button}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{DynamicResource AccentColorBrush2}" />
                        <Setter Property="Foreground" Value="White" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- More infomation for how to customize dialog on https://github.com/MahApps/MahApps.Metro/issues/2500 -->
            <Style TargetType="{x:Type Dialogs:MessageDialog}" BasedOn="{StaticResource {x:Type Dialogs:BaseMetroDialog}}">
                <Style.Resources>
                    <Style BasedOn="{StaticResource MetroFlatButton}" TargetType="{x:Type Button}">
                        <Setter Property="controls:ControlsHelper.ContentCharacterCasing" Value="Upper" />
                    </Style>

                    <Style x:Key="AccentedDialogSquareButton"
                BasedOn="{StaticResource AccentedFlatButton}"
                TargetType="{x:Type Button}">
                        <Setter Property="controls:ControlsHelper.ContentCharacterCasing" Value="Upper" />
                    </Style>

                    <Style x:Key="AccentedDialogHighlightedSquareButton"
                BasedOn="{StaticResource MetroFlatButton}"
                TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="{DynamicResource HighlightBrush}" />
                        <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
                        <Setter Property="controls:ControlsHelper.ContentCharacterCasing" Value="Upper" />
                    </Style>
                </Style.Resources>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
